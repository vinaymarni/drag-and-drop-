{"version":3,"file":"ej2-react-circulargauge.es2015.js","sources":["../src/es6/circular-gauge/axes-directive.js","../src/es6/circular-gauge/annotations-directive.js","../src/es6/circular-gauge/ranges-directive.js","../src/es6/circular-gauge/pointers-directive.js","../src/es6/circular-gauge/circulargauge.component.js"],"sourcesContent":["import { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `Axis` directive represent a axes of the react circular gauge\n * It must be contained in a CircularGauge component(`CircularGauge`).\n * ```tsx\n * <CircularGaugeComponent>\n * <AxesDirective>\n * <AxisDirective></AxisDirective>\n * </AxesDirective>\n * </CircularGaugeComponent>\n * ```\n */\nexport class AxisDirective extends ComplexBase {\n}\nAxisDirective.moduleName = 'axis';\nexport class AxesDirective extends ComplexBase {\n}\nAxesDirective.propertyName = 'axes';\nAxesDirective.moduleName = 'axes';\n","import { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `Annotations` directive represent a annotations of the react circular gauge.\n * It must be contained in a CircularGauge component(`CircularGauge`).\n * ```tsx\n * <CircularGaugeComponent>\n * <AxesDirective>\n * <AxisDirective>\n * <AnnotationsDirective>\n * <AnnotationDirective></AnnotationDirective>\n * </AnnotationsDirective>\n * </AxisDirective>\n * </AxesDirective>\n * </CircularGaugeComponent>\n * ```\n */\nexport class AnnotationDirective extends ComplexBase {\n}\nAnnotationDirective.moduleName = 'annotation';\nexport class AnnotationsDirective extends ComplexBase {\n}\nAnnotationsDirective.propertyName = 'annotations';\nAnnotationsDirective.moduleName = 'annotations';\n","import { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `Ranges` directive represent a ranges of the react circular gauge.\n * It must be contained in a CircularGauge component(`CircularGauge`).\n * ```tsx\n * <CircularGaugeComponent>\n * <AxesDirective>\n * <AxisDirective>\n * <RangesDirective>\n * <RangeDirective></RangeDirective>\n * </RangesDirective>\n * </AxisDirective>\n * </AxesDirective>\n * </CircularGaugeComponent>\n * ```\n */\nexport class RangeDirective extends ComplexBase {\n}\nRangeDirective.moduleName = 'range';\nexport class RangesDirective extends ComplexBase {\n}\nRangesDirective.propertyName = 'ranges';\nRangesDirective.moduleName = 'ranges';\n","import { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `Pointers` directive represent a pointers of the react circular gauge.\n * It must be contained in a CircularGauge component(`CircularGauge`).\n * ```tsx\n * <CircularGaugeComponent>\n * <AxesDirective>\n * <AxisDirective>\n * <PointersDirective>\n * <PointerDirective></PointerDirective>\n * </PointersDirective>\n * </AxisDirective>\n * </AxesDirective>\n * </CircularGaugeComponent>\n * ```\n */\nexport class PointerDirective extends ComplexBase {\n}\nPointerDirective.moduleName = 'pointer';\nexport class PointersDirective extends ComplexBase {\n}\nPointersDirective.propertyName = 'pointers';\nPointersDirective.moduleName = 'pointers';\n","import * as React from 'react';\nimport { CircularGauge } from '@syncfusion/ej2-circulargauge';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents react Circular Gauge Component\n * ```tsx\n * <CircularGaugeComponent></CircularGaugeComponent>\n * ```\n */\nexport class CircularGaugeComponent extends CircularGauge {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = true;\n        this.directivekeys = { 'axes': { 'axis': { 'annotations': 'annotation', 'ranges': 'range', 'pointers': 'pointer' } } };\n        this.immediateRender = false;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement('div', this.getDefaultAttributes(), [].concat(this.props.children, this.portals));\n        }\n    }\n}\napplyMixins(CircularGaugeComponent, [ComponentBase, React.Component]);\n"],"names":["React.createElement","React.Component"],"mappings":";;;;AACA;;;;;;;;;;;AAWA,AAAO,MAAM,aAAa,SAAS,WAAW,CAAC;CAC9C;AACD,aAAa,CAAC,UAAU,GAAG,MAAM,CAAC;AAClC,AAAO,MAAM,aAAa,SAAS,WAAW,CAAC;CAC9C;AACD,aAAa,CAAC,YAAY,GAAG,MAAM,CAAC;AACpC,aAAa,CAAC,UAAU,GAAG,MAAM,CAAC;;ACjBlC;;;;;;;;;;;;;;;AAeA,AAAO,MAAM,mBAAmB,SAAS,WAAW,CAAC;CACpD;AACD,mBAAmB,CAAC,UAAU,GAAG,YAAY,CAAC;AAC9C,AAAO,MAAM,oBAAoB,SAAS,WAAW,CAAC;CACrD;AACD,oBAAoB,CAAC,YAAY,GAAG,aAAa,CAAC;AAClD,oBAAoB,CAAC,UAAU,GAAG,aAAa,CAAC;;ACrBhD;;;;;;;;;;;;;;;AAeA,AAAO,MAAM,cAAc,SAAS,WAAW,CAAC;CAC/C;AACD,cAAc,CAAC,UAAU,GAAG,OAAO,CAAC;AACpC,AAAO,MAAM,eAAe,SAAS,WAAW,CAAC;CAChD;AACD,eAAe,CAAC,YAAY,GAAG,QAAQ,CAAC;AACxC,eAAe,CAAC,UAAU,GAAG,QAAQ,CAAC;;ACrBtC;;;;;;;;;;;;;;;AAeA,AAAO,MAAM,gBAAgB,SAAS,WAAW,CAAC;CACjD;AACD,gBAAgB,CAAC,UAAU,GAAG,SAAS,CAAC;AACxC,AAAO,MAAM,iBAAiB,SAAS,WAAW,CAAC;CAClD;AACD,iBAAiB,CAAC,YAAY,GAAG,UAAU,CAAC;AAC5C,iBAAiB,CAAC,UAAU,GAAG,UAAU,CAAC;;ACnB1C;;;;;;AAMA,AAAO,MAAM,sBAAsB,SAAS,aAAa,CAAC;IACtD,WAAW,CAAC,KAAK,EAAE;QACf,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE,aAAa,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;QACvH,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACrB;IACD,MAAM,GAAG;QACL,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAgB,KAAK,IAAI,CAAC,UAAU,KAAK,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAC5F,KAAK,CAAC,MAAM,EAAE,CAAC;YACf,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAChC;aACI;YACD,OAAOA,aAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,oBAAoB,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;SAChH;KACJ;CACJ;AACD,WAAW,CAAC,sBAAsB,EAAE,CAAC,aAAa,EAAEC,SAAe,CAAC,CAAC,CAAC;;;;;;"}